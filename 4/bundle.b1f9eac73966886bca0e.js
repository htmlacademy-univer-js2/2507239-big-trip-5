(()=>{"use strict";function e(e,t,n="beforeend"){t.insertAdjacentElement(n,e.getElement())}class t{#e=null;_callback={};constructor(){if(new.target===t)throw new Error("Can't instantiate AbstractView, only concrete one.")}get element(){return this.#e||(this.#e=function(e){const t=document.createElement("div");return t.innerHTML=e,t.firstElementChild}(this.template)),this.#e}getElement(){return this.element}removeElement(){this.#e=null}get template(){throw new Error("Abstract method not implemented: get template")}}const n=(e=0,t=1)=>{const n=Math.ceil(Math.min(e,t)),i=Math.floor(Math.max(e,t));return Math.floor(n+Math.random()*(i-n+1))},i=["taxi","bus","train","ship","drive","flight","check-in","sightseeing","restaurant"],s=[{id:1,description:"Geneva is a city in Switzerland that lies at the southern tip of expansive Lac LÃ©man (Lake Geneva).",name:"Geneva",pictures:[{src:`https://loremflickr.com/248/152?random=${n(1,100)}`,description:"Geneva parliament building"}]},{id:2,description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit.",name:"Amsterdam",pictures:[{src:`https://loremflickr.com/248/152?random=${n(1,100)}`,description:"Amsterdam canal"}]}],l={taxi:[{id:1,title:"Order Uber",price:20},{id:2,title:"Choose radio station",price:5}],flight:[{id:3,title:"Add luggage",price:50},{id:4,title:"Switch to comfort",price:80}]},a=()=>{const e=i[n(0,i.length-1)],t=l[e]||[];return{basePrice:n(20,1e3),dateFrom:new Date("2019-07-10T22:55:56.845Z"),dateTo:new Date("2019-07-11T11:22:13.375Z"),destination:s[n(0,s.length-1)].id,id:n(1,100),isFavorite:Boolean(n(0,1)),offers:t.length?[t[n(0,t.length-1)].id]:[],type:e}};class r extends t{#t=null;constructor(e){super(),this.#t=e}get template(){return(e=>{const t=s.find((t=>t.id===e.destination)),n=e.offers.map((t=>(l[e.type]||[]).find((e=>e.id===t)))),i=e=>e.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!1});return`<li class="trip-events__item">\n    <div class="event">\n      <time class="event__date" datetime="${e.dateFrom}">${a=e.dateFrom,`${["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"][a.getMonth()]} ${a.getDate()}`}</time>\n      <div class="event__type">\n        <img class="event__type-icon" width="42" height="42" src="img/icons/${e.type}.png" alt="Event type icon">\n      </div>\n      <h3 class="event__title">${e.type} ${t.name}</h3>\n      <div class="event__schedule">\n        <p class="event__time">\n          <time class="event__start-time" datetime="${e.dateFrom}">${i(e.dateFrom)}</time>\n          &mdash;\n          <time class="event__end-time" datetime="${e.dateTo}">${i(e.dateTo)}</time>\n        </p>\n        <p class="event__duration">${((e,t)=>{const n=t-e,i=Math.floor(n/36e5),s=Math.floor(n/6e4%60);return 0===i?`${s}M`:`${String(i).padStart(2,"0")}H ${String(s).padStart(2,"0")}M`})(e.dateFrom,e.dateTo)}</p>\n      </div>\n      <p class="event__price">\n        &euro;&nbsp;<span class="event__price-value">${e.basePrice}</span>\n      </p>\n      <h4 class="visually-hidden">Offers:</h4>\n      <ul class="event__selected-offers">\n        ${n.map((e=>`\n          <li class="event__offer">\n            <span class="event__offer-title">${e.title}</span>\n            &plus;&euro;&nbsp;\n            <span class="event__offer-price">${e.price}</span>\n          </li>\n        `)).join("")}\n      </ul>\n      <button class="event__favorite-btn ${e.isFavorite?"event__favorite-btn--active":""}" type="button">\n        <span class="visually-hidden">Add to favorite</span>\n        <svg class="event__favorite-icon" width="28" height="28" viewBox="0 0 28 28">\n          <path d="M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z"/>\n        </svg>\n      </button>\n      <button class="event__rollup-btn" type="button">\n        <span class="visually-hidden">Open event</span>\n      </button>\n    </div>\n  </li>`;var a})(this.#t)}}class o extends t{#t=null;constructor(e){super(),this.#t=e}get template(){return((e={type:"flight",destination:1,dateFrom:new Date,dateTo:new Date,basePrice:"",offers:[]})=>{const t=s.find((t=>t.id===e.destination)),n=l[e.type]||[],a=e=>`${String(e.getDate()).padStart(2,"0")}/${String(e.getMonth()+1).padStart(2,"0")}/${String(e.getFullYear()).slice(2)} ${String(e.getHours()).padStart(2,"0")}:${String(e.getMinutes()).padStart(2,"0")}`;return`<form class="event event--edit" action="#" method="post">\n    <header class="event__header">\n      <div class="event__type-wrapper">\n        <label class="event__type  event__type-btn" for="event-type-toggle-1">\n          <span class="visually-hidden">Choose event type</span>\n          <img class="event__type-icon" width="17" height="17" src="img/icons/${e.type}.png" alt="Event type icon">\n        </label>\n        <input class="event__type-toggle  visually-hidden" id="event-type-toggle-1" type="checkbox">\n        <div class="event__type-list">\n          <fieldset class="event__type-group">\n            <legend class="visually-hidden">Event type</legend>\n            ${i.map((t=>`\n              <div class="event__type-item">\n                <input id="event-type-${t}-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="${t}" ${t===e.type?"checked":""}>\n                <label class="event__type-label  event__type-label--${t}" for="event-type-${t}-1">${t}</label>\n              </div>\n            `)).join("")}\n          </fieldset>\n        </div>\n      </div>\n\n      <div class="event__field-group  event__field-group--destination">\n        <label class="event__label  event__type-output" for="event-destination-1">\n          ${e.type}\n        </label>\n        <input class="event__input  event__input--destination" id="event-destination-1" type="text" name="event-destination" value="${t?t.name:""}" list="destination-list-1">\n        <datalist id="destination-list-1">\n          ${s.map((e=>`<option value="${e.name}"></option>`)).join("")}\n        </datalist>\n      </div>\n\n      <div class="event__field-group  event__field-group--time">\n        <label class="visually-hidden" for="event-start-time-1">From</label>\n        <input class="event__input  event__input--time" id="event-start-time-1" type="text" name="event-start-time" value="${a(e.dateFrom)}">\n        &mdash;\n        <label class="visually-hidden" for="event-end-time-1">To</label>\n        <input class="event__input  event__input--time" id="event-end-time-1" type="text" name="event-end-time" value="${a(e.dateTo)}">\n      </div>\n\n      <div class="event__field-group  event__field-group--price">\n        <label class="event__label" for="event-price-1">\n          <span class="visually-hidden">Price</span>\n          &euro;\n        </label>\n        <input class="event__input  event__input--price" id="event-price-1" type="text" name="event-price" value="${e.basePrice}">\n      </div>\n\n      <button class="event__save-btn  btn  btn--blue" type="submit">Save</button>\n      <button class="event__reset-btn" type="reset">Delete</button>\n      <button class="event__rollup-btn" type="button">\n        <span class="visually-hidden">Open event</span>\n      </button>\n    </header>\n    ${((e,t)=>e.length?`<section class="event__section  event__section--offers">\n    <h3 class="event__section-title  event__section-title--offers">Offers</h3>\n    <div class="event__available-offers">\n      ${e.map((e=>`\n        <div class="event__offer-selector">\n          <input class="event__offer-checkbox  visually-hidden" id="event-offer-${e.id}" type="checkbox" name="event-offer-${e.id}" ${t.includes(e.id)?"checked":""}>\n          <label class="event__offer-label" for="event-offer-${e.id}">\n            <span class="event__offer-title">${e.title}</span>\n            &plus;&euro;&nbsp;\n            <span class="event__offer-price">${e.price}</span>\n          </label>\n        </div>\n      `)).join("")}\n    </div>\n  </section>`:"")(n,e.offers)}\n    ${(e=>e?`<section class="event__section  event__section--destination">\n    <h3 class="event__section-title  event__section-title--destination">Destination</h3>\n    <p class="event__destination-description">${e.description}</p>\n    <div class="event__photos-container">\n      <div class="event__photos-tape">\n        ${e.pictures.map((e=>`\n          <img class="event__photo" src="${e.src}" alt="${e.description}">\n        `)).join("")}\n      </div>\n    </div>\n  </section>`:"")(t)}\n  </form>`})(this.#t)}}class p extends t{get template(){return'<form class="trip-events__trip-sort  trip-sort" action="#" method="get">\n    <div class="trip-sort__item  trip-sort__item--day">\n      <input id="sort-day" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-day" checked>\n      <label class="trip-sort__btn" for="sort-day">Day</label>\n    </div>\n\n    <div class="trip-sort__item  trip-sort__item--event">\n      <input id="sort-event" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-event" disabled>\n      <label class="trip-sort__btn" for="sort-event">Event</label>\n    </div>\n\n    <div class="trip-sort__item  trip-sort__item--time">\n      <input id="sort-time" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-time">\n      <label class="trip-sort__btn" for="sort-time">Time</label>\n    </div>\n\n    <div class="trip-sort__item  trip-sort__item--price">\n      <input id="sort-price" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-price">\n      <label class="trip-sort__btn" for="sort-price">Price</label>\n    </div>\n\n    <div class="trip-sort__item  trip-sort__item--offer">\n      <input id="sort-offer" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-offer" disabled>\n      <label class="trip-sort__btn" for="sort-offer">Offers</label>\n    </div>\n  </form>'}}const d=document.querySelector(".trip-events"),c=document.querySelector(".trip-controls__filters"),v=new class{#n=Array.from({length:4},a);get points(){return this.#n}},_=new class{#i=null;#s=null;constructor({boardContainer:e,pointsModel:t}){this.#i=e,this.#s=t}init(){const t=this.#s.points;e(new p,this.#i);const n=document.createElement("ul");n.classList.add("trip-events__list"),this.#i.append(n),e(new o(t[0]),n);for(let i=1;i<t.length;i++)e(new r(t[i]),n)}}({boardContainer:d,pointsModel:v});e(new class extends t{get template(){return'<form class="trip-filters" action="#" method="get">\n    <div class="trip-filters__filter">\n      <input id="filter-everything" class="trip-filters__filter-input  visually-hidden" type="radio" name="trip-filter" value="everything" checked>\n      <label class="trip-filters__filter-label" for="filter-everything">Everything</label>\n    </div>\n\n    <div class="trip-filters__filter">\n      <input id="filter-future" class="trip-filters__filter-input  visually-hidden" type="radio" name="trip-filter" value="future">\n      <label class="trip-filters__filter-label" for="filter-future">Future</label>\n    </div>\n\n    <div class="trip-filters__filter">\n      <input id="filter-present" class="trip-filters__filter-input  visually-hidden" type="radio" name="trip-filter" value="present">\n      <label class="trip-filters__filter-label" for="filter-present">Present</label>\n    </div>\n\n    <div class="trip-filters__filter">\n      <input id="filter-past" class="trip-filters__filter-input  visually-hidden" type="radio" name="trip-filter" value="past">\n      <label class="trip-filters__filter-label" for="filter-past">Past</label>\n    </div>\n\n    <button class="visually-hidden" type="submit">Accept filter</button>\n  </form>'}},c),_.init(),e(new p,d)})();
//# sourceMappingURL=bundle.b1f9eac73966886bca0e.js.map
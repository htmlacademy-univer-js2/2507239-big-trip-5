{"version":3,"file":"bundle.b1f9eac73966886bca0e.js","mappings":"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","sources":["webpack://big-trip/./src/render.js","webpack://big-trip/./src/view/abstract-view.js","webpack://big-trip/./src/utils.js","webpack://big-trip/./src/mock/point.js","webpack://big-trip/./src/view/point-view.js","webpack://big-trip/./src/view/point-edit-view.js","webpack://big-trip/./src/view/sort-view.js","webpack://big-trip/./src/main.js","webpack://big-trip/./src/model/points-model.js","webpack://big-trip/./src/presenter/board-presenter.js","webpack://big-trip/./src/view/filter-view.js"],"sourcesContent":["const RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RenderPosition.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\nexport {RenderPosition, createElement, render};\n","import {createElement} from '../render.js';\n\nexport default class AbstractView {\n  #element = null;\n  _callback = {};\n\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error('Can\\'t instantiate AbstractView, only concrete one.');\n    }\n  }\n\n  get element() {\n    if (!this.#element) {\n      this.#element = createElement(this.template);\n    }\n\n    return this.#element;\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  removeElement() {\n    this.#element = null;\n  }\n\n  get template() {\n    throw new Error('Abstract method not implemented: get template');\n  }\n}\n","const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nexport {getRandomInteger};\n","import {getRandomInteger} from '../utils.js';\n\nconst TYPES = ['taxi', 'bus', 'train', 'ship', 'drive', 'flight', 'check-in', 'sightseeing', 'restaurant'];\n\nconst DESTINATIONS = [\n  {\n    id: 1,\n    description: 'Geneva is a city in Switzerland that lies at the southern tip of expansive Lac Léman (Lake Geneva).',\n    name: 'Geneva',\n    pictures: [\n      {\n        src: `https://loremflickr.com/248/152?random=${getRandomInteger(1, 100)}`,\n        description: 'Geneva parliament building'\n      }\n    ]\n  },\n  {\n    id: 2,\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    name: 'Amsterdam',\n    pictures: [\n      {\n        src: `https://loremflickr.com/248/152?random=${getRandomInteger(1, 100)}`,\n        description: 'Amsterdam canal'\n      }\n    ]\n  }\n];\n\nconst OFFERS_BY_TYPE = {\n  'taxi': [\n    {\n      id: 1,\n      title: 'Order Uber',\n      price: 20\n    },\n    {\n      id: 2,\n      title: 'Choose radio station',\n      price: 5\n    }\n  ],\n  'flight': [\n    {\n      id: 3,\n      title: 'Add luggage',\n      price: 50\n    },\n    {\n      id: 4,\n      title: 'Switch to comfort',\n      price: 80\n    }\n  ]\n};\n\nconst generatePoint = () => {\n  const type = TYPES[getRandomInteger(0, TYPES.length - 1)];\n  const availableOffers = OFFERS_BY_TYPE[type] || [];\n\n  return {\n    basePrice: getRandomInteger(20, 1000),\n    dateFrom: new Date('2019-07-10T22:55:56.845Z'),\n    dateTo: new Date('2019-07-11T11:22:13.375Z'),\n    destination: DESTINATIONS[getRandomInteger(0, DESTINATIONS.length - 1)].id,\n    id: getRandomInteger(1, 100),\n    isFavorite: Boolean(getRandomInteger(0, 1)),\n    offers: availableOffers.length ?\n      [availableOffers[getRandomInteger(0, availableOffers.length - 1)].id] : [],\n    type\n  };\n};\n\nexport {generatePoint, DESTINATIONS, OFFERS_BY_TYPE, TYPES};\n","import AbstractView from './abstract-view.js';\nimport {DESTINATIONS, OFFERS_BY_TYPE} from '../mock/point.js';\n\nconst createPointTemplate = (point) => {\n  const destination = DESTINATIONS.find((dest) => dest.id === point.destination);\n  const pointOffers = point.offers.map((id) => {\n    const typeOffers = OFFERS_BY_TYPE[point.type] || [];\n    return typeOffers.find((offer) => offer.id === id);\n  });\n\n  // Форматируем дату для отображения\n  const formatDate = (date) => {\n    const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    return `${months[date.getMonth()]} ${date.getDate()}`;\n  };\n\n  // Форматируем время\n  const formatTime = (date) => date.toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});\n\n  // Вычисляем длительность\n  const getDuration = (from, to) => {\n    const diff = to - from;\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor((diff / (1000 * 60)) % 60);\n\n    if (hours === 0) {\n      return `${minutes}M`;\n    }\n    return `${String(hours).padStart(2, '0')}H ${String(minutes).padStart(2, '0')}M`;\n  };\n\n  return `<li class=\"trip-events__item\">\n    <div class=\"event\">\n      <time class=\"event__date\" datetime=\"${point.dateFrom}\">${formatDate(point.dateFrom)}</time>\n      <div class=\"event__type\">\n        <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/${point.type}.png\" alt=\"Event type icon\">\n      </div>\n      <h3 class=\"event__title\">${point.type} ${destination.name}</h3>\n      <div class=\"event__schedule\">\n        <p class=\"event__time\">\n          <time class=\"event__start-time\" datetime=\"${point.dateFrom}\">${formatTime(point.dateFrom)}</time>\n          &mdash;\n          <time class=\"event__end-time\" datetime=\"${point.dateTo}\">${formatTime(point.dateTo)}</time>\n        </p>\n        <p class=\"event__duration\">${getDuration(point.dateFrom, point.dateTo)}</p>\n      </div>\n      <p class=\"event__price\">\n        &euro;&nbsp;<span class=\"event__price-value\">${point.basePrice}</span>\n      </p>\n      <h4 class=\"visually-hidden\">Offers:</h4>\n      <ul class=\"event__selected-offers\">\n        ${pointOffers.map((offer) => `\n          <li class=\"event__offer\">\n            <span class=\"event__offer-title\">${offer.title}</span>\n            &plus;&euro;&nbsp;\n            <span class=\"event__offer-price\">${offer.price}</span>\n          </li>\n        `).join('')}\n      </ul>\n      <button class=\"event__favorite-btn ${point.isFavorite ? 'event__favorite-btn--active' : ''}\" type=\"button\">\n        <span class=\"visually-hidden\">Add to favorite</span>\n        <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n          <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n        </svg>\n      </button>\n      <button class=\"event__rollup-btn\" type=\"button\">\n        <span class=\"visually-hidden\">Open event</span>\n      </button>\n    </div>\n  </li>`;\n};\n\nexport default class PointView extends AbstractView {\n  #point = null;\n\n  constructor(point) {\n    super();\n    this.#point = point;\n  }\n\n  get template() {\n    return createPointTemplate(this.#point);\n  }\n}\n","import AbstractView from './abstract-view.js';\nimport {DESTINATIONS, OFFERS_BY_TYPE, TYPES} from '../mock/point.js';\n\nconst createOffersTemplate = (availableOffers, selectedOffers) => {\n  if (!availableOffers.length) {\n    return '';\n  }\n\n  return `<section class=\"event__section  event__section--offers\">\n    <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n    <div class=\"event__available-offers\">\n      ${availableOffers.map((offer) => `\n        <div class=\"event__offer-selector\">\n          <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-${offer.id}\" type=\"checkbox\" name=\"event-offer-${offer.id}\" ${selectedOffers.includes(offer.id) ? 'checked' : ''}>\n          <label class=\"event__offer-label\" for=\"event-offer-${offer.id}\">\n            <span class=\"event__offer-title\">${offer.title}</span>\n            &plus;&euro;&nbsp;\n            <span class=\"event__offer-price\">${offer.price}</span>\n          </label>\n        </div>\n      `).join('')}\n    </div>\n  </section>`;\n};\n\nconst createDestinationTemplate = (destination) => {\n  if (!destination) {\n    return '';\n  }\n\n  return `<section class=\"event__section  event__section--destination\">\n    <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n    <p class=\"event__destination-description\">${destination.description}</p>\n    <div class=\"event__photos-container\">\n      <div class=\"event__photos-tape\">\n        ${destination.pictures.map((picture) => `\n          <img class=\"event__photo\" src=\"${picture.src}\" alt=\"${picture.description}\">\n        `).join('')}\n      </div>\n    </div>\n  </section>`;\n};\n\nconst createPointEditTemplate = (point = {\n  type: 'flight',\n  destination: 1,\n  dateFrom: new Date(),\n  dateTo: new Date(),\n  basePrice: '',\n  offers: []\n}) => {\n  const destination = DESTINATIONS.find((dest) => dest.id === point.destination);\n  const availableOffers = OFFERS_BY_TYPE[point.type] || [];\n\n  const formatDateForInput = (date) => {\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = String(date.getFullYear()).slice(2);\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n\n    return `${day}/${month}/${year} ${hours}:${minutes}`;\n  };\n\n  return `<form class=\"event event--edit\" action=\"#\" method=\"post\">\n    <header class=\"event__header\">\n      <div class=\"event__type-wrapper\">\n        <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n          <span class=\"visually-hidden\">Choose event type</span>\n          <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/${point.type}.png\" alt=\"Event type icon\">\n        </label>\n        <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n        <div class=\"event__type-list\">\n          <fieldset class=\"event__type-group\">\n            <legend class=\"visually-hidden\">Event type</legend>\n            ${TYPES.map((type) => `\n              <div class=\"event__type-item\">\n                <input id=\"event-type-${type}-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${type}\" ${type === point.type ? 'checked' : ''}>\n                <label class=\"event__type-label  event__type-label--${type}\" for=\"event-type-${type}-1\">${type}</label>\n              </div>\n            `).join('')}\n          </fieldset>\n        </div>\n      </div>\n\n      <div class=\"event__field-group  event__field-group--destination\">\n        <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n          ${point.type}\n        </label>\n        <input class=\"event__input  event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"${destination ? destination.name : ''}\" list=\"destination-list-1\">\n        <datalist id=\"destination-list-1\">\n          ${DESTINATIONS.map((dest) => `<option value=\"${dest.name}\"></option>`).join('')}\n        </datalist>\n      </div>\n\n      <div class=\"event__field-group  event__field-group--time\">\n        <label class=\"visually-hidden\" for=\"event-start-time-1\">From</label>\n        <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"${formatDateForInput(point.dateFrom)}\">\n        &mdash;\n        <label class=\"visually-hidden\" for=\"event-end-time-1\">To</label>\n        <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"${formatDateForInput(point.dateTo)}\">\n      </div>\n\n      <div class=\"event__field-group  event__field-group--price\">\n        <label class=\"event__label\" for=\"event-price-1\">\n          <span class=\"visually-hidden\">Price</span>\n          &euro;\n        </label>\n        <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"${point.basePrice}\">\n      </div>\n\n      <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n      <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n      <button class=\"event__rollup-btn\" type=\"button\">\n        <span class=\"visually-hidden\">Open event</span>\n      </button>\n    </header>\n    ${createOffersTemplate(availableOffers, point.offers)}\n    ${createDestinationTemplate(destination)}\n  </form>`;\n};\n\nexport default class PointEditView extends AbstractView {\n  #point = null;\n\n  constructor(point) {\n    super();\n    this.#point = point;\n  }\n\n  get template() {\n    return createPointEditTemplate(this.#point);\n  }\n}\n","import AbstractView from './abstract-view.js';\n\nconst createSortTemplate = () => (\n  `<form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n    <div class=\"trip-sort__item  trip-sort__item--day\">\n      <input id=\"sort-day\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-day\" checked>\n      <label class=\"trip-sort__btn\" for=\"sort-day\">Day</label>\n    </div>\n\n    <div class=\"trip-sort__item  trip-sort__item--event\">\n      <input id=\"sort-event\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-event\" disabled>\n      <label class=\"trip-sort__btn\" for=\"sort-event\">Event</label>\n    </div>\n\n    <div class=\"trip-sort__item  trip-sort__item--time\">\n      <input id=\"sort-time\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-time\">\n      <label class=\"trip-sort__btn\" for=\"sort-time\">Time</label>\n    </div>\n\n    <div class=\"trip-sort__item  trip-sort__item--price\">\n      <input id=\"sort-price\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-price\">\n      <label class=\"trip-sort__btn\" for=\"sort-price\">Price</label>\n    </div>\n\n    <div class=\"trip-sort__item  trip-sort__item--offer\">\n      <input id=\"sort-offer\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-offer\" disabled>\n      <label class=\"trip-sort__btn\" for=\"sort-offer\">Offers</label>\n    </div>\n  </form>`\n);\n\nexport default class SortView extends AbstractView {\n  get template() {\n    return createSortTemplate();\n  }\n}\n","import BoardPresenter from './presenter/board-presenter.js';\nimport PointsModel from './model/points-model.js';\nimport {render} from './render.js';\nimport FilterView from './view/filter-view.js';\nimport SortView from './view/sort-view.js';\n\nconst siteMainElement = document.querySelector('.trip-events');\nconst siteHeaderElement = document.querySelector('.trip-controls__filters');\n\nconst pointsModel = new PointsModel();\nconst boardPresenter = new BoardPresenter({\n  boardContainer: siteMainElement,\n  pointsModel\n});\n\nrender(new FilterView(), siteHeaderElement);\nboardPresenter.init();\n\nconst sortComponent = new SortView();\nrender(sortComponent, siteMainElement);\n","import {generatePoint} from '../mock/point.js';\n\nexport default class PointsModel {\n  #points = Array.from({length: 4}, generatePoint);\n\n  get points() {\n    return this.#points;\n  }\n}\n\n","import {render} from '../render.js';\nimport PointView from '../view/point-view.js';\nimport PointEditView from '../view/point-edit-view.js';\nimport SortView from '../view/sort-view.js';\n\nexport default class BoardPresenter {\n  #boardContainer = null;\n  #pointsModel = null;\n\n  constructor({boardContainer, pointsModel}) {\n    this.#boardContainer = boardContainer;\n    this.#pointsModel = pointsModel;\n  }\n\n  init() {\n    const points = this.#pointsModel.points;\n    render(new SortView(), this.#boardContainer);\n\n    const tripEventsList = document.createElement('ul');\n    tripEventsList.classList.add('trip-events__list');\n    this.#boardContainer.append(tripEventsList);\n\n    // Форма редактирования - первый элемент списка\n    render(new PointEditView(points[0]), tripEventsList);\n\n    // Отрисовка остальных точек маршрута\n    for (let i = 1; i < points.length; i++) {\n      render(new PointView(points[i]), tripEventsList);\n    }\n  }\n}\n","import AbstractView from './abstract-view.js';\n\nconst createFilterTemplate = () => (\n  `<form class=\"trip-filters\" action=\"#\" method=\"get\">\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-everything\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"everything\" checked>\n      <label class=\"trip-filters__filter-label\" for=\"filter-everything\">Everything</label>\n    </div>\n\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-future\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"future\">\n      <label class=\"trip-filters__filter-label\" for=\"filter-future\">Future</label>\n    </div>\n\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-present\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"present\">\n      <label class=\"trip-filters__filter-label\" for=\"filter-present\">Present</label>\n    </div>\n\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-past\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"past\">\n      <label class=\"trip-filters__filter-label\" for=\"filter-past\">Past</label>\n    </div>\n\n    <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n  </form>`\n);\n\nexport default class FilterView extends AbstractView {\n  get template() {\n    return createFilterTemplate();\n  }\n}\n"],"names":["render","component","container","place","insertAdjacentElement","getElement","AbstractView","_callback","constructor","Error","element","this","template","newElement","document","createElement","innerHTML","firstElementChild","removeElement","getRandomInteger","a","b","lower","Math","ceil","min","upper","floor","max","random","TYPES","DESTINATIONS","id","description","name","pictures","src","OFFERS_BY_TYPE","title","price","generatePoint","type","length","availableOffers","basePrice","dateFrom","Date","dateTo","destination","isFavorite","Boolean","offers","PointView","point","super","find","dest","pointOffers","map","offer","formatTime","date","toLocaleTimeString","hour","minute","hour12","getMonth","getDate","getDuration","from","to","diff","hours","minutes","String","padStart","join","createPointTemplate","PointEditView","createPointEditTemplate","formatDateForInput","getFullYear","slice","getHours","getMinutes","createOffersTemplate","selectedOffers","includes","picture","createDestinationTemplate","SortView","siteMainElement","querySelector","siteHeaderElement","pointsModel","Array","points","boardPresenter","boardContainer","init","tripEventsList","classList","add","append","i"],"sourceRoot":""}